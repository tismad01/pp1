INFO  20:20:18,207 - Compiling source file: C:\Users\borot\Desktop\etf\4.god\pp1\projekat\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  20:20:18,277 - #2 program
INFO  20:20:18,277 - #50 test302
INFO  20:20:18,277 - #5 const
INFO  20:20:18,279 - #50 int
INFO  20:20:18,279 - #50 jedan
INFO  20:20:18,281 - #7 =
INFO  20:20:18,281 - #49 1
INFO  20:20:18,281 - #6 ;
INFO  20:20:18,282 - #50 int
INFO  20:20:18,282 - #50 i
INFO  20:20:18,283 - #6 ;
INFO  20:20:18,284 - #50 bool
INFO  20:20:18,285 - #50 ibool
INFO  20:20:18,285 - #6 ;
INFO  20:20:18,285 - #50 int
INFO  20:20:18,285 - #50 niz2
INFO  20:20:18,285 - #6 ;
INFO  20:20:18,285 - #50 int
INFO  20:20:18,285 - #50 niz
INFO  20:20:18,286 - #10 [
INFO  20:20:18,286 - #9 ]
INFO  20:20:18,286 - #6 ;
INFO  20:20:18,287 - #50 int
INFO  20:20:18,287 - #50 a
INFO  20:20:18,287 - #8 ,
INFO  20:20:18,287 - #50 curr
INFO  20:20:18,287 - #6 ;
INFO  20:20:18,287 - #3 {
INFO  20:20:18,287 - #50 int
INFO  20:20:18,288 - #50 sum
INFO  20:20:18,288 - #12 (
INFO  20:20:18,289 - #50 int
INFO  20:20:18,289 - #50 z
INFO  20:20:18,289 - #8 ,
INFO  20:20:18,289 - #50 int
INFO  20:20:18,289 - #50 d
INFO  20:20:18,289 - #13 )
INFO  20:20:18,289 - #3 {
INFO  20:20:18,290 - #22 return
INFO  20:20:18,291 - #50 z
INFO  20:20:18,291 - #38 +
INFO  20:20:18,292 - #50 d
INFO  20:20:18,294 - #6 ;
INFO  20:20:18,294 - #4 }
INFO  20:20:18,294 - #50 int
INFO  20:20:18,296 - #50 inkrement
INFO  20:20:18,296 - #12 (
INFO  20:20:18,296 - #50 int
INFO  20:20:18,296 - #50 a
INFO  20:20:18,296 - #8 ,
INFO  20:20:18,296 - #50 int
INFO  20:20:18,296 - #50 inc
INFO  20:20:18,296 - #13 )
INFO  20:20:18,296 - #50 int
INFO  20:20:18,296 - #50 pom
INFO  20:20:18,296 - #6 ;
INFO  20:20:18,296 - #3 {
INFO  20:20:18,296 - #15 if
INFO  20:20:18,296 - #12 (
INFO  20:20:18,296 - #50 inc
INFO  20:20:18,296 - #32 ==
INFO  20:20:18,297 - #50 jedan
INFO  20:20:18,298 - #13 )
INFO  20:20:18,300 - #50 pom
INFO  20:20:18,300 - #7 =
INFO  20:20:18,300 - #49 1
INFO  20:20:18,301 - #6 ;
INFO  20:20:18,301 - #20 else
INFO  20:20:18,304 - #15 if
INFO  20:20:18,305 - #12 (
INFO  20:20:18,305 - #50 inc
INFO  20:20:18,305 - #32 ==
INFO  20:20:18,306 - #49 2
INFO  20:20:18,306 - #13 )
INFO  20:20:18,306 - #50 pom
INFO  20:20:18,306 - #7 =
INFO  20:20:18,306 - #50 a
INFO  20:20:18,306 - #6 ;
INFO  20:20:18,306 - #22 return
INFO  20:20:18,307 - #50 sum
INFO  20:20:18,307 - #12 (
INFO  20:20:18,308 - #50 a
INFO  20:20:18,308 - #8 ,
INFO  20:20:18,308 - #50 pom
INFO  20:20:18,308 - #13 )
INFO  20:20:18,308 - #6 ;
INFO  20:20:18,309 - #4 }
INFO  20:20:18,309 - #50 bool
INFO  20:20:18,309 - #50 verify
INFO  20:20:18,309 - #12 (
INFO  20:20:18,309 - #13 )
INFO  20:20:18,309 - #3 {
INFO  20:20:18,310 - #18 print
INFO  20:20:18,310 - #12 (
INFO  20:20:18,310 - #47 v
INFO  20:20:18,310 - #13 )
INFO  20:20:18,311 - #6 ;
INFO  20:20:18,311 - #22 return
INFO  20:20:18,311 - #48 false
INFO  20:20:18,311 - #6 ;
INFO  20:20:18,311 - #4 }
INFO  20:20:18,311 - #14 void
INFO  20:20:18,311 - #50 main
INFO  20:20:18,313 - #12 (
INFO  20:20:18,314 - #13 )
INFO  20:20:18,314 - #3 {
INFO  20:20:18,314 - #15 if
INFO  20:20:18,314 - #12 (
INFO  20:20:18,314 - #49 1
INFO  20:20:18,314 - #33 !=
INFO  20:20:18,314 - #49 1
INFO  20:20:18,315 - #13 )
INFO  20:20:18,315 - #18 print
INFO  20:20:18,315 - #12 (
INFO  20:20:18,315 - #30 -
INFO  20:20:18,315 - #49 6
INFO  20:20:18,315 - #13 )
INFO  20:20:18,315 - #6 ;
INFO  20:20:18,315 - #20 else
INFO  20:20:18,315 - #18 print
INFO  20:20:18,315 - #12 (
INFO  20:20:18,315 - #49 0
INFO  20:20:18,315 - #13 )
INFO  20:20:18,315 - #6 ;
INFO  20:20:18,315 - #50 ibool
INFO  20:20:18,316 - #7 =
INFO  20:20:18,316 - #48 false
INFO  20:20:18,316 - #6 ;
INFO  20:20:18,316 - #50 i
INFO  20:20:18,316 - #7 =
INFO  20:20:18,316 - #49 0
INFO  20:20:18,316 - #6 ;
INFO  20:20:18,316 - #16 while
INFO  20:20:18,316 - #12 (
INFO  20:20:18,316 - #50 i
INFO  20:20:18,317 - #34 <
INFO  20:20:18,317 - #49 5
INFO  20:20:18,318 - #13 )
INFO  20:20:18,318 - #3 {
INFO  20:20:18,319 - #15 if
INFO  20:20:18,319 - #12 (
INFO  20:20:18,319 - #50 i
INFO  20:20:18,319 - #32 ==
INFO  20:20:18,319 - #49 2
INFO  20:20:18,319 - #13 )
INFO  20:20:18,319 - #50 ibool
INFO  20:20:18,319 - #7 =
INFO  20:20:18,319 - #48 true
INFO  20:20:18,319 - #6 ;
INFO  20:20:18,319 - #50 i
INFO  20:20:18,319 - #26 ++
INFO  20:20:18,320 - #6 ;
INFO  20:20:18,320 - #4 }
INFO  20:20:18,320 - #15 if
INFO  20:20:18,321 - #12 (
INFO  20:20:18,321 - #50 ibool
INFO  20:20:18,321 - #13 )
INFO  20:20:18,321 - #15 if
INFO  20:20:18,321 - #12 (
INFO  20:20:18,321 - #50 i
INFO  20:20:18,321 - #32 ==
INFO  20:20:18,321 - #49 5
INFO  20:20:18,321 - #13 )
INFO  20:20:18,321 - #18 print
INFO  20:20:18,321 - #12 (
INFO  20:20:18,321 - #49 1
INFO  20:20:18,321 - #13 )
INFO  20:20:18,321 - #6 ;
INFO  20:20:18,321 - #20 else
INFO  20:20:18,321 - #18 print
INFO  20:20:18,321 - #12 (
INFO  20:20:18,322 - #30 -
INFO  20:20:18,322 - #49 1
INFO  20:20:18,322 - #13 )
INFO  20:20:18,322 - #6 ;
INFO  20:20:18,322 - #50 a
INFO  20:20:18,322 - #7 =
INFO  20:20:18,322 - #49 2
INFO  20:20:18,322 - #6 ;
INFO  20:20:18,322 - #50 niz
INFO  20:20:18,322 - #7 =
INFO  20:20:18,322 - #31 new
INFO  20:20:18,322 - #50 int
INFO  20:20:18,322 - #10 [
INFO  20:20:18,322 - #49 3
INFO  20:20:18,322 - #9 ]
INFO  20:20:18,322 - #6 ;
INFO  20:20:18,322 - #50 niz
INFO  20:20:18,323 - #10 [
INFO  20:20:18,324 - #49 0
INFO  20:20:18,324 - #9 ]
INFO  20:20:18,324 - #7 =
INFO  20:20:18,324 - #49 1
INFO  20:20:18,324 - #39 *
INFO  20:20:18,324 - #50 a
INFO  20:20:18,325 - #6 ;
INFO  20:20:18,325 - #50 niz
INFO  20:20:18,325 - #10 [
INFO  20:20:18,325 - #49 1
INFO  20:20:18,325 - #9 ]
INFO  20:20:18,325 - #7 =
INFO  20:20:18,325 - #49 2
INFO  20:20:18,325 - #39 *
INFO  20:20:18,325 - #50 a
INFO  20:20:18,325 - #6 ;
INFO  20:20:18,326 - #50 niz
INFO  20:20:18,326 - #10 [
INFO  20:20:18,326 - #49 2
INFO  20:20:18,326 - #9 ]
INFO  20:20:18,326 - #7 =
INFO  20:20:18,326 - #50 sum
INFO  20:20:18,326 - #12 (
INFO  20:20:18,326 - #50 niz
INFO  20:20:18,326 - #10 [
INFO  20:20:18,326 - #49 1
INFO  20:20:18,326 - #9 ]
INFO  20:20:18,326 - #8 ,
INFO  20:20:18,326 - #50 niz
INFO  20:20:18,326 - #10 [
INFO  20:20:18,326 - #49 0
INFO  20:20:18,326 - #9 ]
INFO  20:20:18,326 - #13 )
INFO  20:20:18,326 - #39 *
INFO  20:20:18,327 - #50 a
INFO  20:20:18,327 - #38 +
INFO  20:20:18,327 - #49 1
INFO  20:20:18,327 - #6 ;
INFO  20:20:18,327 - #15 if
INFO  20:20:18,327 - #12 (
INFO  20:20:18,327 - #50 verify
INFO  20:20:18,327 - #12 (
INFO  20:20:18,327 - #13 )
INFO  20:20:18,328 - #28 ||
INFO  20:20:18,328 - #50 niz
INFO  20:20:18,328 - #10 [
INFO  20:20:18,329 - #49 2
INFO  20:20:18,329 - #9 ]
INFO  20:20:18,329 - #32 ==
INFO  20:20:18,329 - #49 4
INFO  20:20:18,329 - #13 )
INFO  20:20:18,329 - #18 print
INFO  20:20:18,329 - #12 (
INFO  20:20:18,329 - #50 ord
INFO  20:20:18,329 - #12 (
INFO  20:20:18,330 - #47 A
INFO  20:20:18,330 - #13 )
INFO  20:20:18,330 - #13 )
INFO  20:20:18,330 - #6 ;
INFO  20:20:18,330 - #20 else
INFO  20:20:18,330 - #18 print
INFO  20:20:18,330 - #12 (
INFO  20:20:18,330 - #50 ord
INFO  20:20:18,330 - #12 (
INFO  20:20:18,330 - #47 a
INFO  20:20:18,330 - #13 )
INFO  20:20:18,330 - #13 )
INFO  20:20:18,331 - #6 ;
INFO  20:20:18,331 - #18 print
INFO  20:20:18,331 - #12 (
INFO  20:20:18,331 - #50 eol
INFO  20:20:18,331 - #13 )
INFO  20:20:18,331 - #6 ;
INFO  20:20:18,331 - #50 i
INFO  20:20:18,331 - #7 =
INFO  20:20:18,331 - #49 0
INFO  20:20:18,331 - #6 ;
INFO  20:20:18,331 - #16 while
INFO  20:20:18,331 - #12 (
INFO  20:20:18,331 - #50 i
INFO  20:20:18,331 - #34 <
INFO  20:20:18,331 - #49 10
INFO  20:20:18,331 - #13 )
INFO  20:20:18,331 - #3 {
INFO  20:20:18,331 - #15 if
INFO  20:20:18,331 - #12 (
INFO  20:20:18,331 - #50 i
INFO  20:20:18,331 - #32 ==
INFO  20:20:18,332 - #49 3
INFO  20:20:18,332 - #13 )
INFO  20:20:18,332 - #3 {
INFO  20:20:18,332 - #50 i
INFO  20:20:18,332 - #26 ++
INFO  20:20:18,332 - #6 ;
INFO  20:20:18,332 - #21 continue
INFO  20:20:18,332 - #6 ;
INFO  20:20:18,332 - #4 }
INFO  20:20:18,333 - #15 if
INFO  20:20:18,333 - #12 (
INFO  20:20:18,333 - #50 i
INFO  20:20:18,333 - #32 ==
INFO  20:20:18,333 - #49 4
INFO  20:20:18,333 - #13 )
INFO  20:20:18,333 - #17 break
INFO  20:20:18,333 - #6 ;
INFO  20:20:18,333 - #50 i
INFO  20:20:18,334 - #7 =
INFO  20:20:18,334 - #50 inkrement
INFO  20:20:18,334 - #12 (
INFO  20:20:18,334 - #50 i
INFO  20:20:18,334 - #8 ,
INFO  20:20:18,334 - #49 1
INFO  20:20:18,334 - #13 )
INFO  20:20:18,334 - #6 ;
INFO  20:20:18,334 - #4 }
INFO  20:20:18,334 - #15 if
INFO  20:20:18,334 - #12 (
INFO  20:20:18,334 - #50 i
INFO  20:20:18,334 - #32 ==
INFO  20:20:18,334 - #49 3
INFO  20:20:18,335 - #29 &&
INFO  20:20:18,335 - #50 verify
INFO  20:20:18,335 - #12 (
INFO  20:20:18,335 - #13 )
INFO  20:20:18,335 - #13 )
INFO  20:20:18,335 - #18 print
INFO  20:20:18,335 - #12 (
INFO  20:20:18,335 - #30 -
INFO  20:20:18,335 - #49 4
INFO  20:20:18,335 - #13 )
INFO  20:20:18,335 - #6 ;
INFO  20:20:18,335 - #20 else
INFO  20:20:18,335 - #18 print
INFO  20:20:18,335 - #12 (
INFO  20:20:18,335 - #49 4
INFO  20:20:18,335 - #13 )
INFO  20:20:18,335 - #6 ;
INFO  20:20:18,335 - #23 read
INFO  20:20:18,335 - #12 (
INFO  20:20:18,335 - #50 niz
INFO  20:20:18,335 - #10 [
INFO  20:20:18,335 - #49 0
INFO  20:20:18,335 - #9 ]
INFO  20:20:18,336 - #13 )
INFO  20:20:18,336 - #6 ;
INFO  20:20:18,336 - #23 read
INFO  20:20:18,336 - #12 (
INFO  20:20:18,336 - #50 niz
INFO  20:20:18,336 - #10 [
INFO  20:20:18,336 - #49 1
INFO  20:20:18,336 - #9 ]
INFO  20:20:18,336 - #13 )
INFO  20:20:18,336 - #6 ;
INFO  20:20:18,336 - #23 read
INFO  20:20:18,336 - #12 (
INFO  20:20:18,336 - #50 niz
INFO  20:20:18,336 - #10 [
INFO  20:20:18,336 - #49 2
INFO  20:20:18,336 - #9 ]
INFO  20:20:18,336 - #13 )
INFO  20:20:18,336 - #6 ;
INFO  20:20:18,336 - #18 print
INFO  20:20:18,336 - #12 (
INFO  20:20:18,336 - #50 eol
INFO  20:20:18,336 - #13 )
INFO  20:20:18,336 - #6 ;
INFO  20:20:18,336 - #18 print
INFO  20:20:18,336 - #12 (
INFO  20:20:18,336 - #50 sum
INFO  20:20:18,336 - #12 (
INFO  20:20:18,336 - #50 sum
INFO  20:20:18,336 - #12 (
INFO  20:20:18,336 - #50 niz
INFO  20:20:18,336 - #10 [
INFO  20:20:18,336 - #49 0
INFO  20:20:18,336 - #9 ]
INFO  20:20:18,336 - #8 ,
INFO  20:20:18,336 - #50 niz
INFO  20:20:18,336 - #10 [
INFO  20:20:18,336 - #49 1
INFO  20:20:18,337 - #9 ]
INFO  20:20:18,337 - #13 )
INFO  20:20:18,337 - #8 ,
INFO  20:20:18,337 - #50 niz
INFO  20:20:18,337 - #10 [
INFO  20:20:18,337 - #49 2
INFO  20:20:18,337 - #9 ]
INFO  20:20:18,337 - #13 )
INFO  20:20:18,337 - #13 )
INFO  20:20:18,337 - #6 ;
INFO  20:20:18,337 - #18 print
INFO  20:20:18,337 - #12 (
INFO  20:20:18,337 - #50 eol
INFO  20:20:18,337 - #13 )
INFO  20:20:18,337 - #6 ;
INFO  20:20:18,337 - #18 print
INFO  20:20:18,337 - #12 (
INFO  20:20:18,337 - #50 inkrement
INFO  20:20:18,337 - #12 (
INFO  20:20:18,337 - #50 niz
INFO  20:20:18,337 - #10 [
INFO  20:20:18,337 - #49 2
INFO  20:20:18,337 - #9 ]
INFO  20:20:18,337 - #8 ,
INFO  20:20:18,337 - #49 2
INFO  20:20:18,337 - #13 )
INFO  20:20:18,337 - #13 )
INFO  20:20:18,337 - #6 ;
INFO  20:20:18,337 - #50 a
INFO  20:20:18,337 - #7 =
INFO  20:20:18,337 - #49 3
INFO  20:20:18,337 - #6 ;
INFO  20:20:18,337 - #50 i
INFO  20:20:18,337 - #7 =
INFO  20:20:18,337 - #49 0
INFO  20:20:18,337 - #6 ;
INFO  20:20:18,337 - #16 while
INFO  20:20:18,338 - #12 (
INFO  20:20:18,338 - #50 i
INFO  20:20:18,338 - #34 <
INFO  20:20:18,338 - #49 3
INFO  20:20:18,338 - #13 )
INFO  20:20:18,338 - #3 {
INFO  20:20:18,338 - #50 niz
INFO  20:20:18,338 - #10 [
INFO  20:20:18,338 - #50 i
INFO  20:20:18,338 - #9 ]
INFO  20:20:18,338 - #7 =
INFO  20:20:18,338 - #50 niz
INFO  20:20:18,338 - #10 [
INFO  20:20:18,338 - #50 i
INFO  20:20:18,338 - #9 ]
INFO  20:20:18,338 - #39 *
INFO  20:20:18,338 - #49 2
INFO  20:20:18,338 - #39 *
INFO  20:20:18,338 - #50 a
INFO  20:20:18,338 - #6 ;
INFO  20:20:18,338 - #50 i
INFO  20:20:18,338 - #26 ++
INFO  20:20:18,338 - #6 ;
INFO  20:20:18,338 - #4 }
INFO  20:20:18,338 - #50 niz
INFO  20:20:18,338 - #24 .
INFO  20:20:18,338 - #19 foreach
INFO  20:20:18,338 - #12 (
INFO  20:20:18,338 - #50 curr
INFO  20:20:18,338 - #25 =>
INFO  20:20:18,339 - #18 print
INFO  20:20:18,340 - #12 (
INFO  20:20:18,340 - #50 curr
INFO  20:20:18,340 - #13 )
INFO  20:20:18,340 - #6 ;
INFO  20:20:18,340 - #13 )
INFO  20:20:18,340 - #6 ;
INFO  20:20:18,341 - #18 print
INFO  20:20:18,341 - #12 (
INFO  20:20:18,341 - #50 eol
INFO  20:20:18,341 - #13 )
INFO  20:20:18,341 - #6 ;
INFO  20:20:18,342 - #50 niz2
INFO  20:20:18,342 - #7 =
INFO  20:20:18,342 - #49 0
INFO  20:20:18,342 - #6 ;
INFO  20:20:18,342 - #50 niz
INFO  20:20:18,342 - #24 .
INFO  20:20:18,342 - #19 foreach
INFO  20:20:18,342 - #12 (
INFO  20:20:18,342 - #50 curr
INFO  20:20:18,342 - #25 =>
INFO  20:20:18,342 - #3 {
INFO  20:20:18,342 - #50 niz2
INFO  20:20:18,342 - #7 =
INFO  20:20:18,342 - #50 niz2
INFO  20:20:18,342 - #38 +
INFO  20:20:18,342 - #50 curr
INFO  20:20:18,342 - #39 *
INFO  20:20:18,342 - #50 curr
INFO  20:20:18,342 - #6 ;
INFO  20:20:18,342 - #4 }
INFO  20:20:18,342 - #13 )
INFO  20:20:18,342 - #6 ;
INFO  20:20:18,342 - #18 print
INFO  20:20:18,342 - #12 (
INFO  20:20:18,342 - #50 niz2
INFO  20:20:18,342 - #13 )
INFO  20:20:18,342 - #6 ;
INFO  20:20:18,342 - #4 }
INFO  20:20:18,342 - #4 }
INFO  20:20:18,358 - Kreirana je konstanta jedan na liniji 5
INFO  20:20:18,358 - Kreirana globalna promenljiva sa imenom i na liniji 7
INFO  20:20:18,359 - Kreirana globalna promenljiva sa imenom ibool na liniji 8
INFO  20:20:18,359 - Kreirana globalna promenljiva sa imenom niz2 na liniji 10
INFO  20:20:18,359 - Kreirana globalna promenljiva sa imenom niz[] na liniji 12
INFO  20:20:18,359 - Kreirana globalna promenljiva sa imenom a na liniji 13
INFO  20:20:18,359 - Kreirana globalna promenljiva sa imenom curr na liniji 13
INFO  20:20:18,359 - Deklarisana globalna funkcija sa imenom sum na liniji 17
INFO  20:20:18,359 - Pristupa se promenjivoj z na liniji 19
INFO  20:20:18,359 - Pristupa se promenjivoj d na liniji 19
INFO  20:20:18,359 - Deklarisana globalna funkcija sa imenom inkrement na liniji 23
INFO  20:20:18,359 - Kreirana lokalna promenljiva sa imenom pom na liniji 24
INFO  20:20:18,360 - Pristupa se promenjivoj inc na liniji 26
INFO  20:20:18,360 - Pristupa se promenjivoj inc na liniji 27
INFO  20:20:18,360 - Pristupa se promenjivoj a na liniji 27
INFO  20:20:18,360 - Pristupa se promenjivoj a na liniji 29
INFO  20:20:18,360 - Pristupa se promenjivoj pom na liniji 29
INFO  20:20:18,360 - Pozvana metoda sum na liniji 29
INFO  20:20:18,360 - Deklarisana globalna funkcija sa imenom verify na liniji 32
INFO  20:20:18,360 - Pristupa se promenjivoj i na liniji 45
INFO  20:20:18,361 - Pristupa se promenjivoj i na liniji 46
INFO  20:20:18,361 - Pristupa se promenjivoj ibool na liniji 50
INFO  20:20:18,361 - Pristupa se promenjivoj i na liniji 51
INFO  20:20:18,361 - Pristupa se elementu niza niz na liniji 55
INFO  20:20:18,361 - Pristupa se promenjivoj a na liniji 55
INFO  20:20:18,361 - Pristupa se elementu niza niz na liniji 56
INFO  20:20:18,361 - Pristupa se promenjivoj a na liniji 56
INFO  20:20:18,361 - Pristupa se elementu niza niz na liniji 57
INFO  20:20:18,361 - Pristupa se elementu niza niz na liniji 57
INFO  20:20:18,361 - Pristupa se elementu niza niz na liniji 57
INFO  20:20:18,361 - Pozvana metoda sum na liniji 57
INFO  20:20:18,361 - Pristupa se promenjivoj a na liniji 57
INFO  20:20:18,361 - Pozvana metoda verify na liniji 58
INFO  20:20:18,361 - Pristupa se elementu niza niz na liniji 58
INFO  20:20:18,361 - Pozvana metoda ord na liniji 58
INFO  20:20:18,361 - Pozvana metoda ord na liniji 59
INFO  20:20:18,361 - Pristupa se promenjivoj i na liniji 63
INFO  20:20:18,362 - Pristupa se promenjivoj i na liniji 64
INFO  20:20:18,362 - Pristupa se promenjivoj i na liniji 69
INFO  20:20:18,362 - Pristupa se promenjivoj i na liniji 70
INFO  20:20:18,362 - Pozvana metoda inkrement na liniji 70
INFO  20:20:18,362 - Pristupa se promenjivoj i na liniji 73
INFO  20:20:18,362 - Pozvana metoda verify na liniji 73
INFO  20:20:18,362 - Pristupa se elementu niza niz na liniji 76
INFO  20:20:18,362 - Pristupa se elementu niza niz na liniji 77
INFO  20:20:18,362 - Pristupa se elementu niza niz na liniji 78
INFO  20:20:18,362 - Pristupa se elementu niza niz na liniji 80
INFO  20:20:18,362 - Pristupa se elementu niza niz na liniji 80
INFO  20:20:18,362 - Pozvana metoda sum na liniji 80
INFO  20:20:18,362 - Pristupa se elementu niza niz na liniji 80
INFO  20:20:18,362 - Pozvana metoda sum na liniji 80
INFO  20:20:18,362 - Pristupa se elementu niza niz na liniji 83
INFO  20:20:18,362 - Pozvana metoda inkrement na liniji 83
INFO  20:20:18,362 - Pristupa se promenjivoj i na liniji 87
INFO  20:20:18,362 - Pristupa se promenjivoj i na liniji 88
INFO  20:20:18,362 - Pristupa se elementu niza niz na liniji 88
INFO  20:20:18,362 - Pristupa se promenjivoj i na liniji 88
INFO  20:20:18,362 - Pristupa se elementu niza niz na liniji 88
INFO  20:20:18,362 - Pristupa se promenjivoj a na liniji 88
INFO  20:20:18,363 - Pristupa se promenjivoj curr na liniji 92
INFO  20:20:18,363 - Pristupa se promenjivoj niz2 na liniji 97
INFO  20:20:18,363 - Pristupa se promenjivoj curr na liniji 97
INFO  20:20:18,363 - Pristupa se promenjivoj curr na liniji 97
INFO  20:20:18,363 - Pristupa se promenjivoj niz2 na liniji 99
INFO  20:20:18,363 - Main ispravno deklarisan
INFO  20:20:18,363 - Type int: int, -1, -1 
Type char: char, -1, -1 
Con eol: char, 10, 0 
Con null: Class [], 0, 0 
Meth chr: char, 0, 1 
   Var i: int, 0, 1 

Meth ord: int, 0, 1 
   Var ch: char, 0, 1 

Meth len: int, 0, 1 
   Var arr: Arr of notype, 0, 1 

Type bool: , -1, -1 
Prog test302: notype, 0, 1 
   Con jedan: int, 1, 0 
   Var i: int, 0, 0 
   Var ibool: , 1, 0 
   Var niz2: int, 2, 0 
   Var niz: Arr of int, 3, 0 
   Var a: int, 4, 0 
   Var curr: int, 5, 0 
   Meth sum: int, 0, 2 
      Var z: int, 0, 1 
      Var d: int, 1, 1 

   Meth inkrement: int, 0, 2 
      Var a: int, 0, 1 
      Var inc: int, 1, 1 
      Var pom: int, 2, 1 

   Meth verify: , 0, 0 

   Meth main: notype, 0, 0 



INFO  20:20:18,363 - Generating bytecode file: C:\Users\borot\Desktop\etf\4.god\pp1\projekat\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.obj
INFO  20:20:18,374 - Parsiranje uspesno zavrseno!
