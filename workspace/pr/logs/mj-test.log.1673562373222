INFO  23:26:03,943 - Compiling source file: C:\Users\borot\Desktop\etf\4.god\pp1\projekat\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:26:04,027 - #2 program
INFO  23:26:04,027 - #50 MJProgram
INFO  23:26:04,027 - #50 int
INFO  23:26:04,029 - #50 x
INFO  23:26:04,031 - #6 ;
INFO  23:26:04,032 - #50 int
INFO  23:26:04,033 - #50 y
INFO  23:26:04,033 - #10 [
INFO  23:26:04,034 - #9 ]
INFO  23:26:04,034 - #6 ;
INFO  23:26:04,034 - #5 const
INFO  23:26:04,034 - #50 int
INFO  23:26:04,035 - #50 jedan
INFO  23:26:04,035 - #7 =
INFO  23:26:04,036 - #49 1
INFO  23:26:04,036 - #6 ;
INFO  23:26:04,036 - #3 {
INFO  23:26:04,037 - #50 int
INFO  23:26:04,038 - #50 k
INFO  23:26:04,038 - #12 (
INFO  23:26:04,040 - #13 )
INFO  23:26:04,040 - #50 int
INFO  23:26:04,041 - #50 c
INFO  23:26:04,042 - #6 ;
INFO  23:26:04,042 - #3 {
INFO  23:26:04,042 - #50 c
INFO  23:26:04,043 - #7 =
INFO  23:26:04,043 - #49 3
INFO  23:26:04,044 - #6 ;
INFO  23:26:04,046 - #50 x
INFO  23:26:04,047 - #26 ++
INFO  23:26:04,047 - #6 ;
INFO  23:26:04,047 - #18 print
INFO  23:26:04,048 - #12 (
INFO  23:26:04,048 - #50 x
INFO  23:26:04,048 - #13 )
INFO  23:26:04,048 - #6 ;
INFO  23:26:04,048 - #22 return
INFO  23:26:04,049 - #50 c
INFO  23:26:04,049 - #6 ;
INFO  23:26:04,049 - #4 }
INFO  23:26:04,049 - #14 void
INFO  23:26:04,050 - #50 main
INFO  23:26:04,051 - #12 (
INFO  23:26:04,051 - #13 )
INFO  23:26:04,051 - #50 int
INFO  23:26:04,051 - #50 pom1
INFO  23:26:04,052 - #8 ,
INFO  23:26:04,052 - #50 pom2
INFO  23:26:04,052 - #10 [
INFO  23:26:04,052 - #9 ]
INFO  23:26:04,052 - #8 ,
INFO  23:26:04,052 - #50 pom3
INFO  23:26:04,053 - #6 ;
INFO  23:26:04,053 - #3 {
INFO  23:26:04,053 - #50 y
INFO  23:26:04,053 - #7 =
INFO  23:26:04,054 - #31 new
INFO  23:26:04,054 - #50 int
INFO  23:26:04,054 - #10 [
INFO  23:26:04,054 - #49 3
INFO  23:26:04,054 - #9 ]
INFO  23:26:04,054 - #6 ;
INFO  23:26:04,055 - #50 pom2
INFO  23:26:04,055 - #7 =
INFO  23:26:04,055 - #31 new
INFO  23:26:04,055 - #50 int
INFO  23:26:04,055 - #10 [
INFO  23:26:04,055 - #49 2
INFO  23:26:04,055 - #9 ]
INFO  23:26:04,056 - #6 ;
INFO  23:26:04,056 - #18 print
INFO  23:26:04,056 - #12 (
INFO  23:26:04,056 - #50 jedan
INFO  23:26:04,056 - #13 )
INFO  23:26:04,056 - #6 ;
INFO  23:26:04,056 - #50 y
INFO  23:26:04,056 - #10 [
INFO  23:26:04,057 - #49 0
INFO  23:26:04,058 - #9 ]
INFO  23:26:04,058 - #7 =
INFO  23:26:04,058 - #49 99
INFO  23:26:04,058 - #6 ;
INFO  23:26:04,058 - #50 y
INFO  23:26:04,058 - #10 [
INFO  23:26:04,059 - #49 1
INFO  23:26:04,059 - #9 ]
INFO  23:26:04,059 - #7 =
INFO  23:26:04,059 - #49 100
INFO  23:26:04,059 - #6 ;
INFO  23:26:04,059 - #50 y
INFO  23:26:04,059 - #10 [
INFO  23:26:04,059 - #49 2
INFO  23:26:04,059 - #9 ]
INFO  23:26:04,060 - #7 =
INFO  23:26:04,060 - #49 101
INFO  23:26:04,060 - #6 ;
INFO  23:26:04,060 - #10 [
INFO  23:26:04,060 - #50 pom1
INFO  23:26:04,061 - #8 ,
INFO  23:26:04,062 - #50 pom2
INFO  23:26:04,062 - #10 [
INFO  23:26:04,062 - #49 1
INFO  23:26:04,062 - #9 ]
INFO  23:26:04,062 - #8 ,
INFO  23:26:04,063 - #50 pom3
INFO  23:26:04,063 - #9 ]
INFO  23:26:04,063 - #7 =
INFO  23:26:04,063 - #50 y
INFO  23:26:04,063 - #6 ;
INFO  23:26:04,063 - #18 print
INFO  23:26:04,064 - #12 (
INFO  23:26:04,065 - #47 k
INFO  23:26:04,065 - #13 )
INFO  23:26:04,065 - #6 ;
INFO  23:26:04,065 - #50 y
INFO  23:26:04,065 - #24 .
INFO  23:26:04,066 - #19 foreach
INFO  23:26:04,066 - #12 (
INFO  23:26:04,066 - #50 x
INFO  23:26:04,066 - #25 =>
INFO  23:26:04,067 - #18 print
INFO  23:26:04,067 - #12 (
INFO  23:26:04,067 - #50 x
INFO  23:26:04,067 - #13 )
INFO  23:26:04,068 - #6 ;
INFO  23:26:04,068 - #13 )
INFO  23:26:04,068 - #6 ;
INFO  23:26:04,069 - #22 return
INFO  23:26:04,069 - #6 ;
INFO  23:26:04,069 - #4 }
INFO  23:26:04,070 - #4 }
